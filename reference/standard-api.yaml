openapi: 3.1.0
info:
  title: Standard API
  version: '1.0'
  summary: The Client Service Standard API is a client agnostic API to the client servvice.
  description: The Client Service Standard API is a client agnostic API to the client servvice.
servers:
  - url: 'http://localhost:3000'
tags:
  - name: Customers
  - name: Users
  - name: Business data synchronization
paths:
  /customers:
    get:
      summary: Get customers
      tags:
        - Customers
      responses:
        '200':
          description: OK
      operationId: get-customers
      description: Gets all customers
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: 'Pagination, page size limit'
          required: true
        - schema:
            type: integer
          in: query
          name: offset
          description: 'Pagination, page offset'
          required: true
        - schema:
            type: string
            format: date-time
          in: query
          name: latestUpdateAfter
          description: Filters for customers that were created after a given date
        - schema:
            type: boolean
          in: query
          name: noSyncId
          description: Filters for customers that do not have a synchronization Id
        - schema:
            type: string
          in: query
          name: syncId
          description: Filters for customers with the given synchronization Id
      x-internal: true
  '/customers/{id}/reseller-relations':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get customer reseller relation
      tags:
        - Customers
      responses: {}
      operationId: get-customers-id-reseller-relations
      x-internal: true
  '/customers/{id}/reseller-relations/{relation-id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: relation-id
        in: path
        required: true
    get:
      summary: Get specific reseller relation for customer
      tags:
        - Customers
      responses:
        '200':
          description: OK
      operationId: get-customers-id-reseller-relation
      description: ''
      x-internal: true
    delete:
      summary: Delete reseller relation of a customer
      operationId: delete-customers-id-reseller-relations-relation-id
      responses:
        '200':
          description: OK
      description: Deletes this relation
      tags:
        - Customers
  '/customers/{id}/reseller-relations/{relation-id}/customer-roles':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: relation-id
        in: path
        required: true
    get:
      summary: ''
      responses:
        '200':
          description: OK
      operationId: get-customers-reseller-relations-roles
      description: 'Gets all customer roles assigned to this relation, i.e. if a customer role is assigned to a cutomer relation that role is assigned to the customer that is child of the releati automatically.'
      x-internal: true
      tags:
        - Customers
    delete:
      summary: ''
      operationId: delete-customers-id-reseller-relations-relation-id
      responses:
        '200':
          description: OK
      description: Deletes this relation
      tags:
        - Customers
  '/customers/{id}/assigned-customer-roles':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      tags:
        - Customers
      responses: {}
      operationId: get-customers-id-roles
      description: Gets assigned roles to this customer
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: userId
          description: If given filters the list for roles assigned to that specific user
        - schema:
            type: integer
            minimum: 1
            default: 100
            maximum: 1000
          in: query
          name: limit
          description: 'Pagination, maximum page size'
        - schema:
            type: integer
            minimum: 0
          in: query
          name: offset
          description: 'Pagination, page offset'
        - schema:
            type: string
          in: query
          name: assignedAfter
          description: Filters for roles assigned after the given date
      x-internal: true
    post:
      summary: ''
      operationId: post-customers-id-roles
      responses:
        '200':
          description: OK
      description: Assignes a new role for a suser on this customer
      tags:
        - Customers
  '/customers/{id}/efective-customer-roles':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      tags:
        - Customers
      responses: {}
      operationId: get-customers-id-roles
      description: Gets assigned roles to this customer
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: userId
          description: If given filters the list for roles assigned to that specific user
        - schema:
            type: integer
            minimum: 1
            default: 100
            maximum: 1000
          in: query
          name: limit
          description: 'Pagination, maximum page size'
        - schema:
            type: integer
            minimum: 0
          in: query
          name: offset
          description: 'Pagination, page offset'
        - schema:
            type: string
          in: query
          name: assignedAfter
          description: Filters for roles assigned after the given date
      x-internal: true
  /system/roles:
    get:
      summary: ''
      tags: []
      responses: {}
      operationId: get-systemroles
      description: Gets a list of roles defined for the system.
      parameters:
        - schema:
            type: string
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: offset
        - schema:
            type: string
          in: query
          name: user
      x-internal: true
    parameters: []
  /synchronization/users:
    parameters: []
    get:
      summary: Get users for synchronization
      operationId: get-synchronization-users
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/synchronization-user'
        '401':
          description: Unauthorized
      description: Gets registered users with detail information useful for synchronization with other systems.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/X-Total-Count'
        - schema:
            type: boolean
            default: false
          in: query
          name: includeDeleted
          description: Include or exclude uses with status 'deleted'.
        - schema:
            type: boolean
            default: true
          in: query
          name: includeDeactivated
          description: Include or exclude uses with status 'deactivated'.
        - schema:
            type: boolean
            default: true
          in: query
          name: includeActive
          description: Include or exclude uses with status 'active'.
        - schema:
            type: string
            format: email
            example: jon@doe.com
          in: query
          name: emailAddress
          description: Filter for user with the given e-mail address. The match is case insensitive.
        - schema:
            type: string
            format: uuid
          in: query
          name: synchronizationId
          description: Filter for a user with the given synchronization Id.
        - schema:
            type: string
          in: query
          name: lastUpdatedAfter
        - schema:
            type: string
          in: query
          name: createdBefore
      tags:
        - Business data synchronization
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
        description: ''
  '/synchronization/users/{uuid}':
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: UUID of the collection element
    get:
      summary: Get specific user for synchronization
      operationId: get-synchronoization-users-Id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/synchronization-user'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: Gets a specific user with detail information useful for synchronization with other systems.
      tags:
        - Business data synchronization
    put:
      summary: Update specific user with synchronization details
      operationId: put-users-id
      responses:
        '200':
          description: OK
      description: Updates a suer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/synchronization-user'
      tags:
        - Business data synchronization
    patch:
      summary: Patch a specific user
      operationId: patchsynchronization-users-uuid
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/synchronization-user'
      tags:
        - Business data synchronization
  /system/instance-branding:
    get:
      summary: Get instance branding
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/branding'
        '':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/branding'
      operationId: get-system-branding
      description: Gets the instance branding
    put:
      summary: Put instance branding
      operationId: put-system-branding
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/branding'
      description: Sets the branding for the whole instance
    parameters: []
  '/synchronization/users/{uuid}/synchronization-information':
    parameters:
      - $ref: '#/components/parameters/collectionUuid'
    get:
      summary: Get synchronization information for specific user
      operationId: get-synchronization-user-synchronization-information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
      description: Gets the synchronization information of a specific user.
      tags:
        - Business data synchronization
    put:
      summary: Update synchronization information for specific user
      operationId: put-users-id-synchronization-information
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
      description: Updates a suer
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: A JSON document with information important for the synchronization process. The schema of the JSON is defined by the synchronization process.
      tags:
        - Business data synchronization
  /users:
    parameters: []
    get:
      summary: Users
      operationId: get-users
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
      description: Gets registered users.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - schema:
            type: integer
          in: header
          name: X-Total-Count
          description: Total number of elements in the collection.
        - schema:
            type: boolean
          in: query
          name: includeDeleted
          description: Include or exclude uses with status 'deleted'.
        - schema:
            type: boolean
          in: query
          name: includeDeactivated
          description: Include or exclude uses with status 'deactivated'.
        - schema:
            type: boolean
          in: query
          name: includeActive
          description: Include or exclude uses with status 'active'.
      tags:
        - Users
    post:
      summary: ''
      operationId: post-users
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      tags:
        - Users
  '/users/{uuid}':
    parameters:
      - $ref: '#/components/parameters/collectionUuid'
    get:
      summary: Get user by Id
      operationId: get-users-uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
      description: Gets a specific user.
      tags:
        - Users
    put:
      summary: Put user
      operationId: put-users-id
      responses:
        '200':
          description: OK
      description: Updates a specific user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      tags:
        - Users
  '/users/{uuid}/mask':
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: UUID of the collection element
    put:
      summary: Mask a user
      operationId: put-users-id-mask
      responses:
        '200':
          description: OK
      description: 'Will remove all personal information of a user, thus removing the relation to a natural person.'
      tags:
        - Users
  '/users/{id}/assigned-system-roles':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of  the user in the HsM system.
    get:
      summary: Get assigned system roles for user
      tags:
        - Users
      responses: {}
      operationId: get-users-id-systemroles
      description: Gets a list of systemroles assigned to that user.
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: 'Pagination, page size limit'
        - schema:
            type: integer
          in: query
          name: offset
          description: 'Pagination, page offset'
        - schema:
            type: string
          in: header
    post:
      summary: Add assigned system role for user
      operationId: post-users-id-systemroles
      responses:
        '200':
          description: OK
      description: Grant a system role to that user
      tags:
        - Users
    delete:
      summary: Delete an assigned system role of a user
      operationId: delete-users-id-assigned-system-roles
      responses:
        '200':
          description: OK
      tags:
        - Users
  '/users/{id}/assigned-customer-roles':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of  the user in the HsM system.
    get:
      summary: Get assigned customer roles for user
      responses: {}
      operationId: get-users-id-customerroles
      description: Gets a list of effective roles the user has on the specified customer
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: customerId
      tags:
        - Users
    post:
      summary: Add a assigned customer role to a user
      operationId: post-users-id-assigned-customer-roles
      responses:
        '200':
          description: OK
      tags:
        - Users
components:
  schemas:
    user:
      type: object
      title: user
      description: Describes a user of the HsM system. Users are should generally be natural persons.
      properties:
        id:
          type: string
          format: uuid
          description: Id of the user within the HsM system.
          readOnly: true
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        emailAddress:
          type: string
          description: The users e-mail address. This address must be unique within all non deleted users in the HsM system.
          format: email
          example: john@doe.com
        preferredCulture:
          type: string
          description: |-
            The culture the user wants to use in interaction with the system. Given as IETF BCP 47 language tag. If not given the system will use a default invariatn culture. 

            This cutlure is a default for this user, client systems might however choose to use another culture for interaction with the HsM system.
          example: de-AT
        mobilePhoneNumber:
          type: string
          description: 'Mobile phone number. This number will be used when the system wants to interact with that user via SMS, mobile phone numbers are not exposed to other users.'
          example: +43 664 9161413
        gender:
          type: string
          enum:
            - female
            - male
            - non-binary
          description: ''
        latestUpdateAt:
          type: string
          description: 'Describes when the user was last modified within HsM. '
          format: date-time
          example: '2021-08-23T16:15:18.123+01:00'
          readOnly: true
        lifeCycleStatus:
          type: string
      required:
        - emailAddress
    synchronization-user:
      type: object
      title: synchronization-user
      description: Describes a user of the HsM system. Users are should generally be natural persons.
      properties:
        id:
          type: string
          format: uuid
          description: Id of the user within HsM
          readOnly: true
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        emailAddress:
          type: string
          description: The users e-mail address. This address must be unique within all users in HsM.
          format: email
          example: john@doe.com
        preferredCulture:
          type: string
          description: |-
            The culture the user wants to use in interaction with the system. Given as IETF BCP 47 language tag. If not given the system will use a default invariatn culture. 

            This cutlure is a default for this user, client systems might however choose to use another culture for interaction with the HsM system.
          example: de-AT
        mobilePhoneNumber:
          type: string
          description: 'Mobile phone number. This number will be used when the system wants to interact with that user via SMS, mobile phone numbers are not exposed to other users.'
          example: +43 664 9161413
        gender:
          type: string
          enum:
            - diverse
            - female
            - male
        createdAt:
          type: string
          format: date-time
          example: '2021-08-23T16:15:18.123+01:00'
          readOnly: true
        latestUpdateAt:
          type: string
          description: 'Describes when the user was last modified within HsM. '
          format: date-time
          example: '2021-08-23T16:15:18.123+01:00'
          readOnly: true
        synchronizationId:
          type: string
          format: uuid
          description: Id of the user in an external system.
        synchronizationInformation:
          type: string
          description: A JSON document that can be used by synchronization processes to store synchronization information with this user. The schema of the JSON document is defined by the external synchronization process.
        status:
          type: string
        '':
          type: string
      required:
        - emailAddress
        - createdAt
        - latestUpdateAt
    branding:
      description: This model describes the branding of the instance or the effective branding for a customer
      type: object
      properties:
        productName:
          type: string
          minLength: 1
        displayModeDark:
          type: object
          properties:
            companyLogo:
              type: string
              minLength: 1
            navigationBarCompanyLogo:
              type: string
              minLength: 1
            mainColor300:
              type: object
              properties:
                hexCode:
                  type: string
                  minLength: 1
              required:
                - hexCode
            mainColor500:
              type: object
              properties:
                hexCode:
                  type: string
                  minLength: 1
              required:
                - hexCode
            mainColor700:
              type: object
              properties:
                hexCode:
                  type: string
                  minLength: 1
              required:
                - hexCode
            navigationBarColor:
              type: object
              properties:
                hexCode:
                  type: string
                  minLength: 1
              required:
                - hexCode
            navigationBarContrastColor:
              type: object
              properties:
                hexCode:
                  type: string
                  minLength: 1
              required:
                - hexCode
            selectionColor:
              type: object
              properties:
                hexCode:
                  type: string
                  minLength: 1
              required:
                - hexCode
          required:
            - companyLogo
            - navigationBarCompanyLogo
            - mainColor300
            - mainColor500
            - mainColor700
            - navigationBarColor
            - navigationBarContrastColor
            - selectionColor
        displayModeLight:
          type: object
          properties:
            companyLogo:
              type: string
              minLength: 1
            navigationBarCompanyLogo:
              type: string
              minLength: 1
            mainColor300:
              type: object
              properties:
                hexCode:
                  type: string
                  minLength: 1
              required:
                - hexCode
            mainColor500:
              type: object
              properties:
                hexCode:
                  type: string
                  minLength: 1
              required:
                - hexCode
            mainColor700:
              type: object
              properties:
                hexCode:
                  type: string
                  minLength: 1
              required:
                - hexCode
            navigationBarColor:
              type: object
              properties:
                hexCode:
                  type: string
                  minLength: 1
              required:
                - hexCode
            navigationBarContrastColor:
              type: object
              properties:
                hexCode:
                  type: string
                  minLength: 1
              required:
                - hexCode
            selectionColor:
              type: object
              properties:
                hexCode:
                  type: string
                  minLength: 1
              required:
                - hexCode
          required:
            - companyLogo
            - navigationBarCompanyLogo
            - mainColor300
            - mainColor500
            - mainColor700
            - navigationBarColor
            - navigationBarContrastColor
            - selectionColor
        instanceOperator:
          type: string
          minLength: 1
        clientSpecificOptions:
          type: object
          properties:
            webPortal:
              type: object
              properties:
                favIcon:
                  type: string
                  minLength: 1
              required:
                - favIcon
          required:
            - webPortal
      required:
        - productName
        - displayModeDark
        - displayModeLight
        - instanceOperator
        - clientSpecificOptions
      x-examples:
        example-1:
          productName: senseManagement
          displayModeDark:
            companyLogo: 'https://hagleitner.com/logos/hagleitnerLogo.dark.svg'
            navigationBarCompanyLogo: 'https://hagleitner.com/logos/hagleitnerLogo.dark.navigationbar.svg'
            mainColor300:
              hexCode: '#123456'
            mainColor500:
              hexCode: '#123456'
            mainColor700:
              hexCode: '#123456'
            navigationBarColor:
              hexCode: '#123456'
            navigationBarContrastColor:
              hexCode: '#123456'
            selectionColor:
              hexCode: '#123456'
          displayModeLight:
            companyLogo: 'https://hagleitner.com/logos/hagleitnerLogo.light.svg'
            navigationBarCompanyLogo: 'https://hagleitner.com/logos/hagleitnerLogo.light.navigationbar.svg'
            mainColor300:
              hexCode: '#123456'
            mainColor500:
              hexCode: '#123456'
            mainColor700:
              hexCode: '#123456'
            navigationBarColor:
              hexCode: '#123456'
            navigationBarContrastColor:
              hexCode: '#123456'
            selectionColor:
              hexCode: '#123456'
          instanceOperator: Hagleitner
          clientSpecificOptions:
            webPortal:
              favIcon: 'https://hagleitner.com/logos/hsm-favicon.svg'
    customerBranding:
      description: This model describes the branding for a customer
      type: object
      x-examples:
        example-1:
          productName: senseManagement
          displayModeDark:
            companyLogo: 'https://hagleitner.com/logos/hagleitnerLogo.dark.svg'
            navigationBarCompanyLogo: 'https://hagleitner.com/logos/hagleitnerLogo.dark.navigationbar.svg'
            mainColor300:
              hexCode: '#123456'
            mainColor500:
              hexCode: '#123456'
            mainColor700:
              hexCode: '#123456'
            navigationBarColor:
              hexCode: '#123456'
            navigationBarContrastColor:
              hexCode: '#123456'
            selectionColor:
              hexCode: '#123456'
          displayModeLight:
            companyLogo: 'https://hagleitner.com/logos/hagleitnerLogo.light.svg'
            navigationBarCompanyLogo: 'https://hagleitner.com/logos/hagleitnerLogo.light.navigationbar.svg'
            mainColor300:
              hexCode: '#123456'
            mainColor500:
              hexCode: '#123456'
            mainColor700:
              hexCode: '#123456'
            navigationBarColor:
              hexCode: '#123456'
            navigationBarContrastColor:
              hexCode: '#123456'
            selectionColor:
              hexCode: '#123456'
          instanceOperator: Hagleitner
          clientSpecificOptions:
            webPortal:
              favIcon: 'https://hagleitner.com/logos/hsm-favicon.svg'
      title: customerBranding
      properties:
        displayModeDark:
          type: object
          required:
            - companyLogo
            - navigationBarCompanyLogo
            - mainColor300
            - mainColor500
            - mainColor700
            - navigationBarColor
            - navigationBarContrastColor
            - selectionColor
          properties:
            companyLogo:
              type: string
              minLength: 1
            navigationBarCompanyLogo:
              type: string
              minLength: 1
            mainColor300:
              type: object
              required:
                - hexCode
              properties:
                hexCode:
                  type: string
                  minLength: 1
            mainColor500:
              type: object
              required:
                - hexCode
              properties:
                hexCode:
                  type: string
                  minLength: 1
            mainColor700:
              type: object
              required:
                - hexCode
              properties:
                hexCode:
                  type: string
                  minLength: 1
            navigationBarColor:
              type: object
              required:
                - hexCode
              properties:
                hexCode:
                  type: string
                  minLength: 1
            navigationBarContrastColor:
              type: object
              required:
                - hexCode
              properties:
                hexCode:
                  type: string
                  minLength: 1
            selectionColor:
              type: object
              required:
                - hexCode
              properties:
                hexCode:
                  type: string
                  minLength: 1
        displayModeLight:
          type: object
          required:
            - companyLogo
            - navigationBarCompanyLogo
            - mainColor300
            - mainColor500
            - mainColor700
            - navigationBarColor
            - navigationBarContrastColor
            - selectionColor
          properties:
            companyLogo:
              type: string
              minLength: 1
            navigationBarCompanyLogo:
              type: string
              minLength: 1
            mainColor300:
              type: object
              required:
                - hexCode
              properties:
                hexCode:
                  type: string
                  minLength: 1
            mainColor500:
              type: object
              required:
                - hexCode
              properties:
                hexCode:
                  type: string
                  minLength: 1
            mainColor700:
              type: object
              required:
                - hexCode
              properties:
                hexCode:
                  type: string
                  minLength: 1
            navigationBarColor:
              type: object
              required:
                - hexCode
              properties:
                hexCode:
                  type: string
                  minLength: 1
            navigationBarContrastColor:
              type: object
              required:
                - hexCode
              properties:
                hexCode:
                  type: string
                  minLength: 1
            selectionColor:
              type: object
              required:
                - hexCode
              properties:
                hexCode:
                  type: string
                  minLength: 1
      required:
        - displayModeDark
        - displayModeLight
  parameters:
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int32
        example: 100
        default: 100
        minimum: 10
      description: 'Pagination, page size limit.'
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        example: 200
      description: 'Pagination, offset for returned page.'
    X-Total-Count:
      name: X-Total-Count
      in: header
      required: false
      schema:
        type: integer
        format: int32
      description: Total number of elements in the collection.
    collectionUuid:
      name: uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: UUID of the collection element
  responses: {}
