openapi: 3.1.0
info:
  title: Standard API
  contact:
    name: Hagleitner Hygiene Internaltional GmbH
    url: 'http://www.hagleitner.com/'
    email: office@hagleitner.com
  version: 1.0.0-alpha.2
  summary: The Standard API is a client agnostic API to the HsM Client Service
  description: The Standard API is a client agnostic API to the HsM Client Service
servers:
  - url: 'http://localhost:3000'
tags:
  - name: Branding
  - name: Customers
  - name: DataSynchronization
  - name: RoleAssignment
  - name: SelfRegistration
  - name: System
  - name: Users
  - name: CustomerFavorites
  - name: Locations
paths:
  '/customer-role-assignments/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/roleAssignment-customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-401-unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: /customer-role-assignments-id-get
      description: Gets a specific customer role-assignemnt.
      parameters:
        - schema:
            type: string
          in: query
          name: Id
          description: ID of the role assignment
      x-internal: false
      tags:
        - RoleAssignment
    delete:
      summary: ''
      operationId: /customer-role-assignments-id-delete
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Deletes a customer role-assignment.
      parameters:
        - schema:
            type: string
          in: query
          name: Id
          description: ID of the role assignment.
      tags:
        - RoleAssignment
  /customers:
    get:
      summary: /customers#get
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
              examples: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: customers-get
      description: Gets a collection of customers. Only customers that the current user has permissions on will be included in the result.The collection is ordered by name1.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: boolean
            default: false
          in: query
          name: includeDeleted
          description: 'Filters customers based on user status. If true only customers with status ''deleted'' will pass the filter, if false only customers with a status not equal to ''deleted'' will pass the filter.'
        - schema:
            type: boolean
            default: true
          in: query
          name: includeDeactivated
          description: 'Filters customers based on user status. If true only customers with status ''deactivated'' will pass the filter, if false only customers with a status not equal to ''deleted'' status will pass the filter.'
        - schema:
            type: boolean
          in: query
          name: includeActive
          description: 'Filters customers based on user status. If true only customers with status ''active'' will pass the filter, if false only customers with a status not equal to ''active'' will pass the filter.'
        - schema:
            type: string
            format: uuid
          in: query
          name: customerId
          description: Filters for customers based on the customerId. Note that the customer ID is only unique within all customers of the same reseller.
        - schema:
            type: string
            format: uuid
          in: query
          name: resellerId
          description: Filters for sub customer of the given reseller.
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/Accept-Language
        - schema:
            type: string
          in: query
          name: fullTextSearch
          description: A search string that is used to filter for customers using the full text search capability of the system.
      x-internal: false
    post:
      summary: /customers#post
      operationId: customers-post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Creates a new customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
      tags:
        - Customers
      parameters: []
  '/customers/{id}':
    get:
      summary: '/customers/{id}#get'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customers-id-get
      description: 'Gets a single customer, defined by its customer id.'
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/Accept-Language
      x-internal: false
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
      - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/Accept-Language
    put:
      summary: '/customers/{id}#put'
      operationId: customers-id-put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-401-unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ''
      description: Updates a customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
      tags:
        - Customers
      parameters: []
    patch:
      summary: '/customers/{id}#patch'
      operationId: customers-id-patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Performs a partial update on a customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer.PATCH
      tags:
        - Customers
  '/customers/{id}/beneficiary-path':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
      operationId: customer-condition-path-elements#get
      x-internal: false
      description: Gets all the customers on the condition path from the root to this customer as sorted list.
      parameters: []
  '/customers/{id}/branding':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/branding#get'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerBranding
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
          headers: {}
      operationId: customer-branding#get
      description: Gets the branding assigned to this specific customer.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/Accept-Language
      x-internal: false
      tags:
        - Customers
    put:
      summary: '/customers/{id}/branding#put'
      operationId: customer-branding#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Creates or updates the customer branding.
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerBranding
  '/customers/{id}/buildings':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: '/customers/{id}/buildings#post'
      operationId: customer-buildings#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building
      description: Creates a new building for this customer.
      tags:
        - Locations
  '/customers/{id}/customer-hierarchy-relation':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-customer-hierarchy-relation#get
      x-internal: false
      description: Gets the customer hierarchy relation of this customer. I.e. the relation to its parent customer.
      parameters: []
      tags:
        - Customers
    post:
      summary: ''
      operationId: customers-customer-hierarchy-relations#post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      description: Creates a customer-hierarchy from this customer to a reseller (replacing the existing relation).
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      tags:
        - Customers
  '/customers/{id}/condition-relation':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-condition-relation#get
      x-internal: false
      description: Gets the condition owner relation of this customer. I.e. the relation to another customer whose conditions apply to this customer.
      parameters: []
      tags:
        - Customers
    post:
      summary: ''
      operationId: customers-condition-relations#post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      description: Creates a relation from this customer to a condition provider (replacing the existing relation).
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      tags:
        - Customers
  '/customers/{id}/effective-branding':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/effective-branding#get'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/branding
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-effective-branding#get
      description: Gets the effecive branding of this customer.
      parameters: []
      x-internal: false
      tags:
        - Customers
  '/customers/{id}/effective-role-assignments':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/effective-role-assignments#get'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/roleAssignment-customer
      operationId: customer-effective-roles#get
      description: Gets effective roles applied to this customer.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: string
            format: uuid
          in: query
          name: userId
          description: Filters the effective roles to those given to the provided user id.
      x-internal: false
      tags:
        - RoleAssignment
  '/customers/{id}/locations':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: customer-locations#get
      description: Universal endpoint to get a collection of locations based on filter criteria. Collection is ordred by the location name ascending.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: string
            enum:
              - building
              - buildingArea
              - floor
              - floorArea
              - room
          in: query
          name: locationType
          description: Filters for locations of a specific type only
        - schema:
            type: string
            format: uuid
          in: query
          name: parentLocation
          description: Filters for locations that are direct children of this parent location.
        - schema:
            type: string
          in: query
          name: name
          description: Filters for location that match contains the given string in its name.
        - schema:
            type: string
          in: query
          name: code
          description: Filters for location that match contains the given string in its code.
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/Accept-Language
      x-internal: false
      tags:
        - Locations
  '/customers/{id}/invoice-recipient-path':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
      operationId: customer-invoice-recipient-path#get
      x-internal: false
      description: Gets all the customers on the invoicing path from the root to this customer as sorted list.
      parameters: []
  '/customers/{id}/invoice-relation':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-invoice-relation#get
      x-internal: false
      description: Gets the invoice relation of this customer. I.e. the relation to another customer who get the invoices for this customer.
      parameters: []
      tags:
        - Customers
    post:
      summary: ''
      operationId: customers-invoice-relations#post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      description: Creates an invoice from this customer to a reseller (replacing the existing relation).
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      tags:
        - Customers
  '/customers/{id}/invoice-sources':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
      operationId: customer-invoice-sources#get
      x-internal: false
      description: Gets all the invoice sources of a customer (direct descendants in the invoicing-relationship-tree). Collection is sorted by name1.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
  '/customers/{id}/location-tree':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-tree
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: customer-location-tree#get
      description: Gets the whole location tree of a customer. Each level of the returned nested structure is ordered by sequence number and then name.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/Accept-Language
      x-internal: false
      tags:
        - Locations
    put:
      summary: ''
      operationId: customer-location-tree#put
      responses:
        '200':
          description: OK
      description: Changes the whole location tree of a customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-tree
      tags:
        - Locations
  '/customers/{id}/reseller':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: customer-reseller#get
      x-internal: false
      description: Gets the reseller of this customer.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
  '/customers/{id}/reseller-path':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
      operationId: customer-reseller-path-elements#get
      x-internal: false
      description: Gets all the customers on the reseller path from the root to this customer as sorted list.
      parameters: []
  '/customers/{id}/reseller-relation':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-reseller-relation#get
      x-internal: false
      description: Gets the reseller relation of this customer. I.e. the relation to its reseller.
      parameters: []
      tags:
        - Customers
    post:
      summary: ''
      operationId: customers-reseller-relations#post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      description: Creates a reseller from this customer to a reseller (replacing the existing relation).
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      tags:
        - Customers
  '/customers/{id}/role-assignments':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/roleAssignment-customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: '/customers/{id}/role-assignments#get'
      description: Gets roles-assignments of this customer. Role-assignments are ordered by the assignment date ascending (oldest first).
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 100
            maximum: 1000
          in: query
          name: limit
          description: 'Pagination, maximum page size'
        - schema:
            type: integer
            minimum: 0
          in: query
          name: offset
          description: 'Pagination, page offset'
        - schema:
            type: string
          in: query
          name: userId
          description: If given filters the list for roles assigned to that specific user
      x-internal: false
      tags:
        - RoleAssignment
    post:
      summary: ''
      operationId: '/customers/{id}/role-assignments#post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Creates a new role-assignement for this customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/roleAssignment-customer
      tags:
        - RoleAssignment
  '/customers/{id}/rooms':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-room
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: customer-room#get
      description: Get all the room locations of a customer. Collection is orderd by location name.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: string
          in: query
          name: name
          description: Filters for rooms that contain the given value in their name
        - schema:
            type: string
          in: query
          name: code
          description: Filters for rooms that contain the given value in their code
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/Accept-Language
      x-internal: false
      tags:
        - Locations
  '/customers/{id}/role-inheritance':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-role-inheritance
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-role-inheritance#get
      description: Gets the role inheritance settings for this customer.
      parameters: []
      x-internal: false
      tags:
        - Customers
    put:
      summary: ''
      operationId: customers-role-inheritance#put
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-role-inheritance
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      tags:
        - Customers
      description: Configures the role inheritance settings for a customer.
  '/customers/{id}/self-registration-credentials/{selfRegistrationCredentialId}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
      - schema:
          type: string
        name: selfRegistrationCredentialId
        in: path
        required: true
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/selfRegistrationCredential
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: self-registration-credential#get
      x-internal: false
      description: Gets a list of currently active self-registration informations
      parameters: []
      tags:
        - SelfRegistration
    delete:
      summary: ''
      operationId: self-registration-credential#delete
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: 'Delete a self registration information. '
      tags:
        - SelfRegistration
  '/customers/{id}/self-registration-credentials':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/selfRegistrationCredential
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
      operationId: self-registration-credentials#get
      x-internal: false
      description: Gets a list of currently active self-registration credentials. List is ordered ascending by ValidTill date.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
      tags:
        - SelfRegistration
  '/customers/{id}/self-registration-credentials/current':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/selfRegistrationCredential
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
              examples:
                Self registration without customer number:
                  value:
                    type: self-registration-credentials-without-customernumber
                    title: Self registration only possible for customers with a customer number
                    detail: Self-registration credentials can only be issued for customers with an assigned customer number.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: self-registration-credential-current#get
      x-internal: false
      description: Gets the self-registration credentials for the current date. If that credential was not created before the server will create the credantial when this endpoint is called.
      parameters: []
      tags:
        - SelfRegistration
  '/customers/{id}/customer-hierarchy-path-elements':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
      operationId: customer-customer-hierarchy-path-elements#get
      x-internal: false
      description: Gets all the customers on the customer-hierarchy path from the root to this customer as sorted list.
      parameters: []
  '/customers/{id}/sub-customers':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      tags:
        - Customers
      operationId: customer-sub-customers#get
      x-internal: false
      description: Gets all the sub-customers of a customer (direct descendants in the reseller-relationship-tree). Collection is sorted by name1.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
  '/customers/{id}/subsidiaries':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
      operationId: customer-subsidiaries#get
      x-internal: false
      description: Gets all the subsidiaries of a customer (direct descendants in the company-hierarchy-relationship-tree). Collection is sorted by name1.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
  '/customers/{id}/beneficiaries':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
      operationId: customer-beneficiaries#get
      x-internal: false
      description: Gets all the beneficiares of a customer (direct descendants in the condition-relationship-tree). Collection is sorted by name1.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
  '/buildings/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the building
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: building#get
      description: Gets a single building
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/Accept-Language
      x-internal: false
      tags:
        - Locations
    put:
      summary: ''
      operationId: building#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Updates a single building
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building
      tags:
        - Locations
    patch:
      summary: ''
      operationId: building#patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Performs a partial update on a building.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building.PATCH
        description: ''
      tags:
        - Locations
  /building-areas:
    parameters: []
    post:
      summary: ''
      operationId: building-areas#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building-area
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building-area
      description: Creates a new building area
      tags:
        - Locations
  '/buildings-areas/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the building
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building-area
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: building-area#get
      description: Gets a single building
      parameters: []
      x-internal: false
      tags:
        - Locations
    put:
      summary: ''
      operationId: building-area#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Updates a single building area
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building-area
      tags:
        - Locations
    patch:
      summary: ''
      operationId: building-area#patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Performs a partial update on a building area resource.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building-area.PATCH
        description: ''
      tags:
        - Locations
  /floors:
    parameters: []
    post:
      summary: ''
      operationId: floors#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor
      description: Creates a new floor
      tags:
        - Locations
  '/floors/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the floor
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: floor#get
      description: Gets a single floor
      parameters: []
      x-internal: false
      tags:
        - Locations
    put:
      summary: ''
      operationId: floor#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Updates a single floor
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor
      tags:
        - Locations
    patch:
      summary: ''
      operationId: floor#patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Performs a partial update on a floor resoruce.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor.PATCH
        description: ''
      tags:
        - Locations
  /floor-areas:
    parameters: []
    post:
      summary: ''
      operationId: floor-areas#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor-area
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor-area
      description: Creates a new floor area
      tags:
        - Locations
  '/floor-areas/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the floor area
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor-area
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: floor-area#get
      description: Gets a single floor
      parameters: []
      x-internal: false
      tags:
        - Locations
    put:
      summary: ''
      operationId: floor-area#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Updates a single floor area
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor-area
      tags:
        - Locations
    patch:
      summary: ''
      operationId: floor-area#patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Performs a partial update on a floor-area resource.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor-area.PATCH
        description: ''
      tags:
        - Locations
  '/locations/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the location
    get:
      summary: ''
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: location#get
      description: 'Gets a single location. '
    patch:
      summary: ''
      operationId: location#patch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location.PATCH
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Performs a partial update on a location resource
      tags:
        - Locations
  '/locations/{id}/sub-locations':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the location
    get:
      summary: ''
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: location-sublocations#get
      description: Returns all (direct) chrildren of this location.
    post:
      summary: ''
      operationId: location-sublocations#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Creates a new sub-location of this location
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location
      tags:
        - Locations
  '/locations/{id}/path':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the location
    get:
      summary: ''
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: '/locations/{id}/path#get'
      description: 'Returns all locations on the location-tree path to this location, including this location. The returned array is ordered by the tree-level of the locations i.e. the root locatio first.'
  /rooms:
    parameters: []
    post:
      summary: ''
      operationId: rooms#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-room
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-room
      description: Creates a new room
      tags:
        - Locations
  '/rooms/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the room
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-room
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: room#get
      description: Gets a single room
      parameters: []
      x-internal: false
      tags:
        - Locations
    put:
      summary: ''
      operationId: room#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Updates a single room
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-room
      tags:
        - Locations
    patch:
      summary: ''
      operationId: room#patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Performs a partial update on a room resource.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-room.PATCH
        description: ''
      tags:
        - Locations
  /system/instance-branding:
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/branding
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: instance-branding#get
      description: Gets the instance branding definition.
      tags:
        - System
    put:
      summary: ''
      operationId: instance-branding#put
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/branding
      description: Sets the branding for the whole instance
      tags:
        - System
    parameters: []
  /system/role-assignments:
    parameters: []
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/roleAssignment-customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: systemr-role-assignments#get
      description: Gets role-assignments for the system. Role-assignments are ordered by the assignment date ascending (oldest first).
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: string
          in: query
          name: userId
          description: If given filters the list for roles assigned to that specific user.
      x-internal: false
      tags:
        - RoleAssignment
    post:
      summary: ''
      operationId: system-role-assignments#post
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Creates a new role assignement for this customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/roleAssignment-user
      tags:
        - RoleAssignment
  '/system/role-assignments/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/roleAssignment-customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: system-role-assignment#get
      description: Gets a role assignement between users and the system.
      parameters:
        - schema:
            type: string
          in: query
          name: Id
          description: ID of the role assignment
      x-internal: false
      tags:
        - RoleAssignment
    delete:
      summary: ''
      operationId: system-role-assignment#delete
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Deletes a system role assignment.
      parameters:
        - schema:
            type: string
          in: query
          name: Id
          description: ID of the role assignment.
      tags:
        - RoleAssignment
  /system/roles:
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  cod:
                    type: string
                  name:
                    type: string
                  propagateToResellerCustomer:
                    type: string
                  propagateToSubsidiaries:
                    type: string
                  propagateToInvoiceSources:
                    type: string
                  propagateToBeneficiaries:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: system-roles#get
      description: Gets a list of roles defined for the system.
      parameters:
        - schema:
            type: string
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: offset
        - schema:
            type: string
          in: query
          name: user
      x-internal: false
      tags:
        - System
    parameters: []
  /users:
    parameters: []
    get:
      summary: ''
      operationId: users#get
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: Gets registered users.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: integer
          in: header
          name: X-Total-Count
          description: Total number of elements in the collection.
        - schema:
            type: boolean
          in: query
          name: includeDeleted
          description: Include or exclude uses with status 'deleted'.
        - schema:
            type: boolean
          in: query
          name: includeDeactivated
          description: Include or exclude uses with status 'deactivated'.
        - schema:
            type: boolean
          in: query
          name: includeActive
          description: Include or exclude uses with status 'active'.
      tags:
        - Users
    post:
      summary: ''
      operationId: users#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/user
      tags:
        - Users
      description: Creates a new user.
  '/users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      operationId: user#get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Gets a specific user.
      tags:
        - Users
    put:
      summary: ''
      operationId: user#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Updates a specific user
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/user
      tags:
        - Users
  '/users/{id}/status':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      operationId: user-status#get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/userStatus
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: |-
        Gets a the status of a specific user.
        Active: The user can interact with the system.
        Inactive: The user can (temporarily) not interact with the system but can be reactivatd
        Deleted: The user was deleted and cannot be re-activated. The e-mail address of deleted users does not have to be unique within the system.
        Masked: The user was deleted and finally the data of the user was masked to support GPDR requirements. Masked users cannot be reactivated. All personal infomrmation is removed.
      tags:
        - Users
    put:
      summary: ''
      operationId: user-status#put
      description: Updates a user's status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/userStatus
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      tags:
        - Users
  '/users/{id}/customer-roles':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of  the user in the HsM system.
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/roleAssignment-user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: user-customerroles#get
      description: 'Gets a list of roles the user has on a customer, or on all customers. Result will be ordered by customerId then role code.'
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: customerId
          description: If given filters the results for a specific customer only.
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
      tags:
        - RoleAssignment
  '/users/{id}/favorite-customers':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of  the user.
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: user-favorite-customers#get
      description: Gets the customer favorites of a user. Sorted by customer name1. The total number of allowed customer favorites is limited by the backend therefore this collection endpoint has no pagination.
      parameters: []
      tags:
        - CustomerFavorites
  '/users/{id}/recently-used-customers':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of  the user.
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: user-recently-used-customers#get
      description: Gets the recently used customers of a user. Sorted by the last access date descending. The total number of allowed recently used customers is limited by the backend therefore this collection endpoint has no pagination.
      parameters: []
      tags:
        - CustomerFavorites
  '/users/{id}/system-roles':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of  the user in the HsM system.
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/roleAssignment-user
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: user-systemroles#get
      description: Gets a list of systemroles assigned to that user.
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: 'Pagination, page size limit'
        - schema:
            type: integer
          in: query
          name: offset
          description: 'Pagination, page offset'
      tags:
        - RoleAssignment
components:
  schemas: {}
  responses: {}
  examples: {}
  securitySchemes: {}
