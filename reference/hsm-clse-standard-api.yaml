openapi: 3.1.0
info:
  title: Standard API
  contact:
    name: Hagleitner Hygiene Internaltional GmbH
    url: 'http://www.hagleitner.com/'
    email: office@hagleitner.com
  version: 1.0.0-beta.2
  summary: The Standard API is a client agnostic API to the HsM Client Service
  description: |
    The Standard API is a client agnostic API to the HsM Client Service.

    ## Notes for developers

    ### i18N and Accept-Language header
    All operations will respect Accept-Language headers. If the operation has to handle localizable content it will do so respecting the Accept-Language header. This includes formatting of culture-specific data, sorting, language-specific content (phrases) etc.

    ### Responses
    This specification shows only the most relevant responses. Clients have to still handle all other possible HTTP Response codes.
servers:
  - url: 'http://clse.hsm-test.com/api/standard/v1'
tags:
  - name: Customers
  - name: CustomerFavorites
  - name: Locations
  - name: RoleAssignments
  - name: SelfRegistration
  - name: System
  - name: Users
paths:
  '/customer-role-assignments/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customer-role-assignments/{id} GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRoleAssignment-customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-401-unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: /customer-role-assignments-id-get
      description: Gets a specific customer role-assignemnt.
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: Id
          description: ID of the role assignment
      x-internal: false
      tags:
        - RoleAssignments
    delete:
      summary: '/customer-role-assignments/{id} DELETE'
      operationId: /customer-role-assignments-id-delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Deletes a customer role-assignment.
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: Id
          description: ID of the role assignment.
      tags:
        - RoleAssignments
  /customers:
    get:
      summary: /customers GET
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
          headers:
            header-0:
              schema:
                type: string
              description: X
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
              examples: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      operationId: customers-get
      description: |-
        Gets a collection of customers. Only customers that the current user has permissions on will be included in the result.The collection is ordered by name1.

        This collection is capped to a maximum of X customers.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: string
            format: uuid
          in: query
          name: customerNumber
          description: Filters for customers based on the customer number. Note that the customer number  is only unique within all customers of the same reseller. Filters for exactly matching customer numbers.
        - schema:
            type: string
            format: uuid
          in: query
          name: resellerId
          description: Filters for sub customer of the given reseller.
        - schema:
            type: string
          in: query
          name: fullTextSearch
          description: A search string that is used to filter for customers using the full text search capability of the system.
        - schema:
            type: string
            example: 'active,inactive'
            default: active
          in: query
          name: status
          description: 'Filters for customers that are in one of the given states. '
      x-internal: false
    post:
      summary: /customers POST
      operationId: customers-post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
      description: Creates a new customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
      tags:
        - Customers
      parameters: []
  '/customers/{id}':
    get:
      summary: '/customers/{id} GET'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customers-id-get
      description: 'Gets a single customer, defined by its customer id.'
      parameters: []
      x-internal: false
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    put:
      summary: '/customers/{id} PUT'
      operationId: customers-id-put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-401-unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ''
      description: Updates a customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
      tags:
        - Customers
      parameters: []
    patch:
      summary: '/customers/{id} PATCH'
      operationId: customers-id-patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Performs a partial update on a customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer.PATCH
      tags:
        - Customers
  '/customers/{id}/beneficiary-path':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/beneficiary-path GET'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: ''
      operationId: customer-status-get
      x-internal: false
      description: Gets the status of teh customer.
  '/customers/{id}/status':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/status#get'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                enum:
                  - active
                  - inactive
                  - deleted
                example: inactive
      operationId: customer-status#get
      x-internal: false
      description: Gets all the customers on the condition path from the root to this customer as sorted list.
    put:
      summary: '/customers/{id}/status#put'
      operationId: customer-status#put
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                required: true
                enum:
                  - active
                  - inactive
                  - deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Modifies the status of a customer.
      requestBody:
        content:
          application/json:
            schema:
              type: string
              enum:
                - active
                - inactive
                - deleted
      tags:
        - Customers
  '/customers/{id}/branding':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/branding GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerBranding
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
          headers: {}
      operationId: customer-branding#get
      description: Gets the branding assigned to this specific customer.
      x-internal: false
      tags:
        - Customers
    put:
      summary: '/customers/{id}/branding PUT'
      operationId: customer-branding#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Creates or updates the customer branding.
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerBranding
    delete:
      summary: '/customers/{id}/branding DELETE'
      operationId: customer-branding#delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Deletes a customer branding.
      tags:
        - Customers
  '/customers/{id}/buildings':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: '/customers/{id}/buildings POST'
      operationId: customer-buildings#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building
      description: Creates a new building for this customer.
      tags:
        - Locations
    get:
      summary: '/customers/{id}/buildings GET'
      operationId: get-customers-id-buildings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Gets all buildings of a csutomer.
      tags:
        - Customers
  '/customers/{id}/customer-hierarchy-relation':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/customer-hierarchy-relation GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-customer-hierarchy-relation#get
      x-internal: false
      description: Gets the customer hierarchy relation of this customer. I.e. the relation to its parent customer.
      tags:
        - Customers
    post:
      summary: '/customers/{id}/customer-hierarchy-relation POST'
      operationId: customers-customer-hierarchy-relations#post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      description: Creates a customer-hierarchy from this customer to a reseller (replacing the existing relation).
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      tags:
        - Customers
  '/customers/{id}/condition-relation':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/condition-relation GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-condition-relation#get
      x-internal: false
      description: Gets the condition owner relation of this customer. I.e. the relation to another customer whose conditions apply to this customer.
      tags:
        - Customers
    post:
      summary: '/customers/{id}/condition-relation POST'
      operationId: customers-condition-relations#post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      description: Creates a relation from this customer to a condition provider (replacing the existing relation).
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      tags:
        - Customers
    delete:
      summary: '/customers/{id}/condition-relation DELETE'
      operationId: customers-condition-relations#delete
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Deletes the condition relation for this customer.
      tags:
        - Customers
  '/customers/{id}/effective-branding':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/effective-branding GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/branding
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-effective-branding#get
      description: Gets the effecive branding of this customer.
      x-internal: false
      tags:
        - Customers
  '/customers/{id}/effective-role-assignments':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/effective-role-assignments GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRoleAssignment-customer
      operationId: customer-effective-roles#get
      description: Gets effective roles applied to this customer.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: string
            format: uuid
          in: query
          name: userId
          description: Filters the effective roles to those given to the provided user id.
      x-internal: false
      tags:
        - RoleAssignments
  '/customers/{id}/invoice-recipient-path':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/invoice-recipient-path GET'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-light
      operationId: customer-invoice-recipient-path#get
      x-internal: false
      description: Gets all the customers on the invoicing path from the root to this customer as sorted list.
  '/customers/{id}/invoice-relation':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/invoice-relation GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-invoice-relation#get
      x-internal: false
      description: Gets the invoice relation of this customer. I.e. the relation to another customer who get the invoices for this customer.
      tags:
        - Customers
    post:
      summary: '/customers/{id}/invoice-relation POST'
      operationId: customers-invoice-relations#post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      description: Creates an invoice from this customer to a reseller (replacing the existing relation).
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      tags:
        - Customers
    delete:
      summary: '/customers/{id}/invoice-relation DELETE'
      operationId: customers-invoice-relations#delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Deletes the invoice relation for this customer.
      tags:
        - Customers
  '/customers/{id}/invoice-sources':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/invoice-sources GET'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-light
      operationId: customer-invoice-sources#get
      x-internal: false
      description: Gets all the invoice sources of a customer (direct descendants in the invoicing-relationship-tree). Collection is sorted by name1.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
  '/customers/{id}/location-tree':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/location-tree GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-tree
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-location-tree#get
      description: Gets the whole location tree of a customer. Each level of the returned nested structure is ordered by sequence number and then name.
      x-internal: false
      tags:
        - Locations
  '/customers/{id}/locations':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/locations GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-locations#get
      description: Generic endpoint to get a collection of locations based on filter criteria. Collection is ordred by the location name ascending.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: string
            enum:
              - building
              - buildingArea
              - floor
              - floorArea
              - room
          in: query
          name: locationType
          description: Filters for locations of a specific type only
        - schema:
            type: string
            format: uuid
          in: query
          name: parentLocation
          description: Filters for locations that are direct children of this parent location.
        - schema:
            type: string
          in: query
          name: name
          description: Filters for location that match contains the given string in its name.
        - schema:
            type: string
          in: query
          name: code
          description: Filters for location that match contains the given string in its code.
      x-internal: false
      tags:
        - Locations
  '/customers/{id}/mark-favorite':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    post:
      summary: '/customers/{id}/mark-favorite POST'
      operationId: post-customers-id-mark-favorite
      responses:
        '200':
          description: OK
      description: Controller endpoint. Marks a customer as favorite or non favorite for the currently accessing user. The operation will be successful irrespective if the actual favorite status of the customer for the current user changes or not.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                isFavorite:
                  type: boolean
                  description: 'If true the customer is set as a favorite for the current user, if false the customer is removed from the user''s favorites.'
      tags:
        - Customers
  '/customers/{id}/mark-recently-used':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    post:
      summary: '/customers/{id}/mark-recently-used POST'
      operationId: customer-mark-recently-user#post
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: 'Controller endpoint. Marks a customer as recently used the currently accessing user. '
      tags:
        - Customers
  '/customers/{id}/reseller':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/reseller GET'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-light
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '404':
          description: Not Found
      operationId: customer-reseller#get
      x-internal: false
      description: Gets the reseller of this customer.
  '/customers/{id}/reseller-path':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/reseller-path GET'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-light
      operationId: customer-reseller-path-elements#get
      x-internal: false
      description: |-
        Gets all the customers on the reseller path from the root to this customer as sorted array (root to given customer id).
        Depth of customer relations is naturally limited, therefore this collection endpoint does not support pagination.
      parameters: []
  '/customers/{id}/reseller-relation':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/reseller-relation GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-reseller-relation#get
      x-internal: false
      description: Gets the reseller relation of this customer. I.e. the relation to its reseller.
      tags:
        - Customers
    post:
      summary: '/customers/{id}/reseller-relation POST'
      operationId: customers-reseller-relations#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      description: Creates a reseller from this customer to a reseller (replacing the existing relation).
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
      tags:
        - Customers
  '/customers/{id}/role-assignments':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/role-assignments GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRoleAssignment-customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-role-assignments#get
      description: Gets roles-assignments of this customer. Role-assignments are ordered by the assignment date ascending (oldest first).
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 100
            maximum: 1000
          in: query
          name: limit
          description: 'Pagination, maximum page size'
        - schema:
            type: integer
            minimum: 0
          in: query
          name: offset
          description: 'Pagination, page offset'
        - schema:
            type: string
          in: query
          name: userId
          description: If given filters the list for roles assigned to that specific user
      x-internal: false
      tags:
        - RoleAssignments
    post:
      summary: '/customers/{id}/role-assignments POST'
      operationId: customer-role-assignments#post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRelation
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Creates a new role-assignement for this customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRoleAssignment-customer
      tags:
        - RoleAssignments
  '/customers/{id}/rooms':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/rooms GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-room
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-room#get
      description: Get all the room locations of a customer. Collection is orderd by location name.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: string
          in: query
          name: name
          description: Filters for rooms that contain the given value in their name
        - schema:
            type: string
          in: query
          name: code
          description: Filters for rooms that contain the given value in their code
      x-internal: false
      tags:
        - Locations
  '/customers/{id}/role-inheritance':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/role-inheritance GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-role-inheritance
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: customer-role-inheritance#get
      description: Gets the role inheritance settings for this customer.
      x-internal: false
      tags:
        - Customers
    put:
      summary: '/customers/{id}/role-inheritance POST'
      operationId: customers-role-inheritance#put
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-role-inheritance
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      tags:
        - Customers
      description: Configures the role inheritance settings for a customer.
  '/customer-self-assignment-credentials/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customer-self-assignment-credentials/{id} GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerSelfAssignmentCredentials
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: self-assignment-credential#get
      x-internal: false
      description: Gets the self assignment credentials for a customer by id.
      tags:
        - SelfRegistration
    delete:
      summary: '/customer-self-assignment-credentials/{id} DELETE'
      operationId: self-assignment-credential#delete
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Deletes these self-assignment credentials.
      tags:
        - SelfRegistration
  '/customers/{id}/self-assignment-credentials':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/self-assignment-credentials GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerSelfAssignmentCredentials
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: self-assignment-credentials#get
      x-internal: false
      description: 'Gets a list of currently active self-assignment credentials. List is ordered ascending by ValidTill date. '
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: string
            example: 'active,expired'
          in: query
          name: status
          description: Filters credentials by their status
      tags:
        - SelfRegistration
  '/customers/{id}/self-assignment-credentials/current':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/self-assignment-credentials/current GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerSelfAssignmentCredentials
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerSelfAssignmentCredentials
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: self-assignment-credential-current#get
      x-internal: false
      description: Gets the self-assignment credentials for the current date. If that credential was not created before the server will create the credantial when this endpoint is called.
      tags:
        - SelfRegistration
  '/customers/{id}/customer-hierarchy-path-elements':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/customer-hierarchy-path-elements GET'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer
      operationId: customer-customer-hierarchy-path-elements#get
      x-internal: false
      description: Gets all the customers on the customer-hierarchy path from the root to this customer as sorted list.
      parameters: []
  '/customers/{id}/sub-customers':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/sub-customers GET'
      tags:
        - Customers
      operationId: customer-sub-customers#get
      x-internal: false
      description: Gets all the sub-customers of a customer (direct descendants in the reseller-relationship-tree). Collection is sorted by name1.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-light
  '/customers/{id}/subsidiaries':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/subsidiaries GET'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-light
      operationId: customer-subsidiaries#get
      x-internal: false
      description: Gets all the subsidiaries of a customer (direct descendants in the company-hierarchy-relationship-tree). Collection is sorted by name1.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
  '/customers/{id}/beneficiaries':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: '/customers/{id}/beneficiaries GET'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-light
      operationId: customer-beneficiaries#get
      x-internal: false
      description: Gets all the beneficiares of a customer (direct descendants in the condition-relationship-tree). Collection is sorted by name1.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
  /buildings:
    parameters: []
    post:
      summary: ''
      operationId: buildings#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building-area
        description: ''
      description: Creates a new building
      tags:
        - Locations
  '/buildings/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the building
    get:
      summary: '/buildings/{id} GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: building#get
      description: Gets a single building
      x-internal: false
      tags:
        - Locations
    put:
      summary: '/buildings/{id} POST'
      operationId: building#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Updates a single building
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building
      tags:
        - Locations
    patch:
      summary: '/buildings/{id} PATCH'
      operationId: building#patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Performs a partial update on a building.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building.PATCH
        description: ''
      tags:
        - Locations
    delete:
      summary: '/buildings/{id} DELETE'
      operationId: building#delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Deletes the building.
      tags:
        - Locations
  /building-areas:
    parameters: []
    post:
      summary: /building-areas POST
      operationId: building-areas#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building-area
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building-area
      description: Creates a new building area
      tags:
        - Locations
  '/buildings-areas/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the building
    get:
      summary: '/buildings-areas/{id} GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building-area
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: building-area#get
      description: Gets a single building
      x-internal: false
      tags:
        - Locations
    put:
      summary: '/buildings-areas/{id} PUT'
      operationId: building-area#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Updates a single building area
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building-area
      tags:
        - Locations
    patch:
      summary: '/buildings-areas/{id} PATCH'
      operationId: building-area#patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Performs a partial update on a building area resource.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-building-area.PATCH
        description: ''
      tags:
        - Locations
    delete:
      summary: '/buildings-areas/{id} DELETE'
      operationId: building-area#delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Deletes the building area.
      tags:
        - Locations
  /floors:
    parameters: []
    post:
      summary: /floors GET
      operationId: floors#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor
      description: Creates a new floor
      tags:
        - Locations
  '/floors/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the floor
    get:
      summary: '/floors/{id} GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: floor#get
      description: Gets a single floor
      x-internal: false
      tags:
        - Locations
    put:
      summary: '/floors/{id} PUT'
      operationId: floor#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Updates a single floor
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor
      tags:
        - Locations
    patch:
      summary: '/floors/{id} PATCH'
      operationId: floor#patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Performs a partial update on a floor resoruce.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor.PATCH
        description: ''
      tags:
        - Locations
    delete:
      summary: '/floors/{id} DELETE'
      operationId: floor#delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      tags:
        - Locations
      description: Deletes this floor.
  /floor-areas:
    parameters: []
    post:
      summary: /floor-areas GET
      operationId: floor-areas#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor-area
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor-area
      description: Creates a new floor area
      tags:
        - Locations
  '/floor-areas/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the floor area
    get:
      summary: '/floor-areas/{id} GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor-area
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Foundr
      operationId: floor-area#get
      description: Gets a single floor
      x-internal: false
      tags:
        - Locations
    put:
      summary: '/floor-areas/{id} PUT'
      operationId: floor-area#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Updates a single floor area
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor-area
      tags:
        - Locations
    patch:
      summary: '/floor-areas/{id} PATCH'
      operationId: floor-area#patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Performs a partial update on a floor-area resource.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-floor-area.PATCH
        description: ''
      tags:
        - Locations
    delete:
      summary: '/floor-areas/{id} DELETE'
      operationId: floor-area#delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Deletes the floor area.
      tags:
        - Locations
  '/locations/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the location
    get:
      summary: '/locations/{id} GET'
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: location#get
      description: 'Gets a single location. '
    patch:
      summary: '/locations/{id} PATCH'
      operationId: location#patch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location.PATCH
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Performs a partial update on a location resource
      tags:
        - Locations
    delete:
      summary: '/locations/{id} DELETE'
      operationId: location#delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Deletes the location
      tags:
        - Locations
  '/locations/{id}/sub-locations':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the location
    get:
      summary: '/locations/{id}/sub-locations GET'
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: location-sublocations#get
      description: Returns all (direct) chrildren of this location.
    post:
      summary: '/locations/{id}/sub-locations POST'
      operationId: location-sublocations#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Creates a new sub-location of this location
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location
      tags:
        - Locations
  '/locations/{id}/path':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the location
    get:
      summary: '/locations/{id}/path GET'
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: /location-path#get
      description: 'Returns all locations on the location-tree path to this location, including this location. The returned array is ordered by the tree-level of the locations i.e. the root locatio first.'
  /rooms:
    parameters: []
    post:
      summary: /rooms GET
      operationId: rooms#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-room
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-room
      description: Creates a new room
      tags:
        - Locations
  '/rooms/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the room
    get:
      summary: '/rooms/{id} GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-room
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: room#get
      description: Gets a single room
      x-internal: false
      tags:
        - Locations
    put:
      summary: '/rooms/{id} PUT'
      operationId: room#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Updates a single room
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-room
      tags:
        - Locations
    patch:
      summary: '/rooms/{id} PATCH'
      operationId: room#patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      description: Performs a partial update on a room resource.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/location-room.PATCH
        description: ''
      tags:
        - Locations
    delete:
      summary: '/rooms/{id} DELETE'
      operationId: room#delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      tags:
        - Locations
      description: Deletes this room.
  /system/instance-branding:
    get:
      summary: /system/instance-branding GET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/branding
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: instance-branding#get
      description: Gets the instance branding definition.
      tags:
        - System
    put:
      summary: /system/instance-branding PUT
      operationId: instance-branding#put
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/branding
      description: Sets the branding for the whole instance
      tags:
        - System
    parameters: []
  /system/role-assignments:
    parameters: []
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRoleAssignment-customer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: systemr-role-assignments#get
      description: Gets role-assignments for the system. Role-assignments are ordered by the assignment date ascending (oldest first).
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: string
          in: query
          name: userId
          description: If given filters the list for roles assigned to that specific user.
      x-internal: false
      tags:
        - RoleAssignments
    post:
      summary: ''
      operationId: system-role-assignments#post
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Creates a new role assignement for this customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRoleAssignment-user
      tags:
        - RoleAssignments
  '/system/role-assignments/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRoleAssignment-user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: system-role-assignment#get
      description: Gets a role assignement between users and the system.
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: Id
          description: ID of the role assignment
      x-internal: false
      tags:
        - RoleAssignments
    delete:
      summary: ''
      operationId: system-role-assignment#delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Deletes a system role assignment.
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: Id
          description: ID of the role assignment.
      tags:
        - RoleAssignments
  /system/roles:
    get:
      summary: /system/roles GET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  cod:
                    type: string
                  name:
                    type: string
                  propagateToResellerCustomer:
                    type: string
                  propagateToSubsidiaries:
                    type: string
                  propagateToInvoiceSources:
                    type: string
                  propagateToBeneficiaries:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-403-forbidden
        '404':
          description: Not Found
      operationId: system-roles#get
      description: Gets a list of defined roles.
      parameters:
        - schema:
            type: string
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: offset
        - schema:
            type: string
          in: query
          name: user
      x-internal: false
      tags:
        - System
    parameters: []
  /users:
    parameters: []
    get:
      summary: /users GET
      operationId: users#get
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      description: Gets registered users.
      parameters:
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
        - schema:
            type: string
            example: 'deleted,masked'
            default: 'active, inactive'
          in: query
          name: status
          description: Filters users based on their status. Only users with a status that matches one of the given status will pass the filter.
      tags:
        - Users
    post:
      summary: /users POST
      operationId: users#post
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/user
      tags:
        - Users
      description: Creates a new user.
  '/users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: '/users/{id} GET'
      operationId: user#get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Gets a specific user.
      tags:
        - Users
    put:
      summary: '/users/{id} PUT'
      operationId: user#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Updates a specific user
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/user
      tags:
        - Users
  '/users/{id}/status':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: '/users/{id}/status GET'
      operationId: user-status#get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                enum:
                  - active
                  - inactive
                  - deleted
                  - masked
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: |-
        Gets a the status of a specific user.
        Active: The user can interact with the system.
        Inactive: The user can (temporarily) not interact with the system but can be reactivatd
        Deleted: The user was deleted and cannot be re-activated. The e-mail address of deleted users does not have to be unique within the system.
        Masked: The user was deleted and finally the data of the user was masked to support GPDR requirements. Masked users cannot be reactivated. All personal infomrmation is removed.
      tags:
        - Users
    put:
      summary: '/users/{id}/status PUT'
      operationId: user-status#put
      description: Updates a user's status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/userStatus
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: string
              enum:
                - active
                - inactive
                - deleted
                - masked
  '/users/{id}/customer-count':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of  the user in the HsM system.
    get:
      summary: '/users/{id}/customer-count GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRoleAssignment-user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: user-customer-count#get
      description: Gets the number of customer this user has access to. Will only include active customers
      tags:
        - RoleAssignments
  '/users/{id}/customer-roles':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of  the user in the HsM system.
    get:
      summary: '/users/{id}/customer-roles GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRoleAssignment-user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: user-customerroles#get
      description: 'Gets a list of roles the user has on a customer, or on all customers. Result will be ordered by customerId then role code.'
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: customerId
          description: If given filters the results for a specific customer only.
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/limit
        - $ref: ./hsm-clse-standard-api-base.yaml#/components/parameters/offset
      tags:
        - RoleAssignments
  '/users/{id}/favorite-customers':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of  the user.
    get:
      summary: '/users/{id}/favorite-customers GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-favorite
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: user-favorite-customers#get
      description: Gets the customer favorites of a user. Sorted by customer favorite sequence number and then by customer name1. As the total number of allowed customer favorites per user is limited by the backend therefore this collection endpoint has no pagination.
      tags:
        - CustomerFavorites
  '/users/{id}/recently-used-customers':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of  the user.
    get:
      summary: '/users/{id}/recently-used-customers GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customer-recently-used
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: user-recently-used-customers#get
      description: 'Gets the recently used customers of a user. Sorted by the last access date descending. The total number of allowed recently used customers is limited per user by the backend, therefore this collection endpoint has no pagination.'
      tags:
        - CustomerFavorites
  '/users/{id}/system-roles':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of  the user in the HsM system.
    get:
      summary: '/users/{id}/system-roles GET'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/customerRoleAssignment-user
          headers: {}
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./hsm-clse-standard-api-base.yaml#/components/schemas/response-400-badRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: user-systemroles#get
      description: Gets a list of systemroles assigned to that user.
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: 'Pagination, page size limit'
        - schema:
            type: integer
          in: query
          name: offset
          description: 'Pagination, page offset'
      tags:
        - RoleAssignments
components:
  schemas: {}
  responses: {}
  examples: {}
  securitySchemes: {}
