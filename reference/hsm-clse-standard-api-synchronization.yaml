openapi: 3.1.0
info:
  title: hsm-clse-standard-api-synchronization
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /synchronization/customers:
    parameters: []
    get:
      summary: ''
      operationId: synchronization-customers#get
      responses:
        '200':
          description: OK
          headers:
            X-Total-Count:
              schema:
                type: integer
              description: Total count of resources in the collection.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./hsm-clse-standard-api.yaml#/components/schemas/customer-synchronization
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-403-forbidden'
        '404':
          description: Not Found
      description: Gets customers with detail information useful for synchronization with other systems. The collection is ordered by name1.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - schema:
            type: boolean
            default: false
          in: query
          name: includeDeleted
          description: 'Filters customers based on user status. If true only customers with status ''deleted'' will pass the filter, if false only customers with a status not equal to ''deleted'' will pass the filter.'
        - schema:
            type: boolean
            default: true
          in: query
          name: includeDeactivated
          description: 'Filters customers based on user status. If true only customers with status ''deactivated'' will pass the filter, if false only customers with a status not equal to ''deleted'' status will pass the filter.'
        - schema:
            type: boolean
          in: query
          name: includeActive
          description: 'Filters customers based on user status. If true only customers with status ''active'' will pass the filter, if false only customers with a status not equal to ''active'' will pass the filter.'
        - schema:
            type: string
            format: uuid
            example: 98aea202-354b-4912-81f7-364e609fe650
          in: query
          name: synchronizationId
          description: Filters for a customer with the given synchronization Id. Only a customer with an exact match will pass the filter.
        - schema:
            type: string
            example: '2021-11-12T21:15:13.1234+01:00'
          in: query
          name: latestUpdatedAfter
          description: Filters for customers  that were last updated in the system after (>) the given date.
        - schema:
            type: string
            example: '2021-11-12T21:15:13.1234+01:00'
            format: date-time
          in: query
          name: createdBefore
          description: 'Filters for customers  that were created in the system before (<) the given date. '
        - schema:
            type: boolean
          in: query
          name: synchronizationIdAvailable
          description: 'Filters for customers based on the availability of a synchronizationId. If set to true only users with a non-empty synchronizationId will pass the filter, if set to false only users with an empty synchronizationId will pass the filter.  '
        - schema:
            type: string
          in: query
          name: customerNumber
          description: Filters for customers based on the customer number. Note that the customer Id is only unique within all customers of the same reseller.
        - schema:
            type: string
            format: uuid
          in: query
          name: resellerId
          description: Filters for sub customer of the given reseller.
        - schema:
            type: string
          in: query
          name: nameStartsWith
          description: Filters for customers whose name starts with the given string. String matching is done case insensitive..
      tags:
        - DataSynchronization
    post:
      summary: ''
      operationId: synchronization-customer#post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer-synchronization'
      description: Creates a customer with detail information useful for synchronization with other systems.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer-synchronization'
      tags:
        - DataSynchronization
  '/synchronization/customers/{id}/role-assignments/{role-assignment-id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
      - schema:
          type: string
        name: role-assignment-id
        in: path
        required: true
        description: ID of the role assignment
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleAssignment-customer'
      operationId: '/synchronization/customers/{id}/role-assignments/{role-assignment-id}#get'
      description: 'Gets role-assignemnts '
      parameters:
        - schema:
            type: string
          in: query
          name: Id
          description: ID of the role assignment
      x-internal: true
      tags:
        - DataSynchronization
  '/synchronization/customers/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      operationId: synchronization-customer#get
      responses:
        '200':
          description: OK
          headers:
            X-Total-Count:
              schema:
                type: integer
              description: Total count of resources in the collection.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customer-synchronization'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Gets customer with detail information useful for synchronization with other systems.
      parameters: []
      tags:
        - DataSynchronization
        - Users
    put:
      summary: ''
      operationId: synchronization-customer#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Updates a customer with detailled information for synchronization processes.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer-synchronization'
      tags:
        - DataSynchronization
  '/synchronization/customers/{id}/condition-relation':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      operationId: synchronization-customer-condition-relation#get
      responses:
        '200':
          description: OK
          headers:
            X-Total-Count:
              schema:
                type: integer
              description: Total count of resources in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerRelation-synchronization'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: Unauthorized
        '402':
          description: Payment Required
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: 'Gets the condition relation of this customer (i.e. looking up the relation tree) with detail information useful for synchronization with other systems. '
      parameters: []
      tags:
        - DataSynchronization
        - Users
    put:
      summary: ''
      operationId: synchronization-customer-condition-relation#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Updates a customer's condition relation with detailled information for synchronization processes.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user-synchronization'
      tags:
        - DataSynchronization
  '/synchronization/customers/{id}/customer-condition-relations':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      operationId: synchronization-customer-condition-relations#get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customerRelation-synchronization'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Gets all reseller relations of this customer i.e. all relations between customers where this customer is the reseller.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - DataSynchronization
        - Users
  '/synchronization/customers/{id}/customer-hierarchy-relation':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      operationId: synchronization-customer-customer-hierarchy-relation#get
      responses:
        '200':
          description: OK
          headers:
            X-Total-Count:
              schema:
                type: integer
              description: Total count of resources in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerRelation-synchronization'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: 'Gets the customer-hierarchy relation of this customer (i.e. looking up the relation tree) with detail information useful for synchronization with other systems. '
      parameters: []
      tags:
        - DataSynchronization
        - Users
    put:
      summary: ''
      operationId: synchronization-customer-customer-hierarchy-relation#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Updates a customer's customer-hierarchy relation with detailled information for synchronization processes.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerRelation-synchronization'
      tags:
        - DataSynchronization
  '/synchronization/customers/{id}/customer-hierarchy-relations':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      operationId: synchronization-customer-customer-hierarchy-relations#get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customerRelation-synchronization'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Gets all reseller relations of this customer i.e. all relations between customers where this customer is the reseller.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - DataSynchronization
        - Users
  '/synchronization/customers/{id}/invoice-relation':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      operationId: synchronization-customer-invoice-relation#get
      responses:
        '200':
          description: OK
          headers:
            X-Total-Count:
              schema:
                type: integer
              description: Total count of resources in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerRelation-synchronization'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ''
        '500':
          description: Internal Server Error
      description: 'Gets the invoice relation of this customer (i.e. looking up the reseller relation) with detail information useful for synchronization with other systems. '
      parameters: []
      tags:
        - DataSynchronization
        - Users
    put:
      summary: ''
      operationId: synchronization-customer-invoice-relation#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Updates a customer's invoice relation with detailled information for synchronization processes.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user-synchronization'
      tags:
        - DataSynchronization
  '/synchronization/customers/{id}/invoice-relations':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      operationId: synchronization-customer-invoice-relations#get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: null
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Gets all reseller relations of this customer i.e. all relations between customers where this customer is the reseller.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - DataSynchronization
        - Users
  '/synchronization/customers/{id}/reseller-relation':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      operationId: synchronization-customer-reseller-relation#get
      responses:
        '200':
          description: OK
          headers:
            X-Total-Count:
              schema:
                type: integer
              description: Total count of resources in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerRelation-synchronization'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: 'Gets the reseller relation of this customer (i.e. looking up the reseller relation) with detail information useful for synchronization with other systems. '
      parameters: []
      tags:
        - DataSynchronization
        - Users
    put:
      summary: ''
      operationId: synchronization-customer-reseller-relation#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Updates a customer's reseller relation with detailled information for synchronization processes.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user-synchronization'
      tags:
        - DataSynchronization
  '/synchronization/customers/{id}/reseller-relations':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      operationId: synchronization-customer-reseller-relations#get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customerRelation-synchronization'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Gets all reseller relations of this customer i.e. all relations between customers where this customer is the reseller.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - DataSynchronization
        - Users
  '/synchronization/customers/{id}/role-assignments':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the customer
    get:
      summary: ''
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/roleAssignment-customer'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: '/synchronization/customers/{id}/role-assignments#get'
      description: Gets roles-assignments of this customer together with synchronization data. Role-assignments are ordered by the assignment date ascending (oldest first).
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 100
            maximum: 1000
          in: query
          name: limit
          description: 'Pagination, maximum page size'
        - schema:
            type: integer
            minimum: 0
          in: query
          name: offset
          description: 'Pagination, page offset'
        - schema:
            type: string
          in: query
          name: userId
          description: If given filters the list for roles assigned to that specific user
      x-internal: false
    post:
      summary: ''
      operationId: '/synchronization/customers/{id}/role-assignments#post'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleAssignment-user'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Creates a new role-assignement for this customer.
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roleAssignment-customer'
  /synchronization/users:
    parameters: []
    get:
      summary: ''
      operationId: synchronization-users#get
      responses:
        '200':
          description: OK
          headers:
            X-Total-Count:
              schema:
                type: integer
              description: Total count of resources in the collection.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user-synchronization'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Gets registered users with detail information useful for synchronization with other systems.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - schema:
            type: boolean
            default: false
          in: query
          name: includeDeleted
          description: 'Filters users based on user status. If true only users with status ''deleted'' will pass the filter, if false only users with a status not equal to ''deleted'' will pass the filter.'
        - schema:
            type: boolean
            default: true
          in: query
          name: includeDeactivated
          description: 'Filters users based on user status. If true only users with status ''deactivated'' will pass the filter, if false only users with a status not equal to ''deleted'' status will pass the filter.'
        - schema:
            type: boolean
          in: query
          name: includeActive
          description: 'Filters users based on user status. If true only uses with status ''active'' will pass the filter, if false only users with a status not equal to ''active'' will pass the filter.'
        - schema:
            type: string
            format: email
            example: jon@doe.com
          in: query
          name: emailAddress
          description: Filter for user with the given e-mail address. The match is case insensitive.
        - schema:
            type: string
            format: uuid
            example: 98aea202-354b-4912-81f7-364e609fe650
          in: query
          name: synchronizationId
          description: Filters for a user with the given synchronization Id. Only a user with an exact match will pass the filter.
        - schema:
            type: string
            example: '2021-11-12T21:15:13.1234+01:00'
          in: query
          name: lastUpdatedAfter
          description: Filters for users that were last updated in the system after (>) the given date.
        - schema:
            type: string
            example: '2021-11-12T21:15:13.1234+01:00'
          in: query
          name: createdBefore
          description: 'Filters for users that were created in the system before (<) the given date. '
        - schema:
            type: boolean
          in: query
          name: synchronizationIdAvailable
          description: 'Filters for users based on the availability of a synchronizationId. If set to true only users with a non-empty synchronizationId will pass the filter, if set to false only users with an empty synchronizationId will pass the filter.  '
      tags:
        - DataSynchronization
        - Users
    post:
      summary: ''
      operationId: synchronization-user#post
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Creates a new user together with synchronization data.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user-synchronization'
      tags:
        - DataSynchronization
  '/synchronization/users/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: UUID of the collection element
    get:
      summary: ''
      operationId: synchronization-user#get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-synchronization'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Gets a specific user with detail information useful for synchronization with other systems.
      tags:
        - DataSynchronization
    put:
      summary: ''
      operationId: synchronization-user#put
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Updates a suer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user-synchronization'
      tags:
        - DataSynchronization
    patch:
      summary: ''
      operationId: synchronization-user#patch
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response-400-badRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user-synchronization'
      tags:
        - DataSynchronization
      description: Performs a partial update on a user-synchronization resource.
components:
  schemas: {}
